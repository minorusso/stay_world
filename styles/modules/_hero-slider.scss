.swiper {
  overflow: visible !important;
}

.swiper-slide {
  height: 500px;
  overflow:hidden;

  & > img {
    width: 100%;
    height: 100%;
    max-width: 100%;
    // 上下左右が親要素のdivと同じ
    object-fit: cover;

    transform: scale(1.3);
    transition: transform 1.9s ease;


  }

  // 画像をうっすら青みがからせているだけ
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 61, 125, 0.1);
  }
  // 通常はscale 1.3でactiveになったものだけ通常サイズ
  &-active {
    & > img {
      transform: none;
    }

    & .hero__title {
      opacity: 1;
      transform: translate(-50%, -50%);
    }
  }

}

.hero {
  overflow: hidden;
  &__title {
    position: absolute;
    top: 50%;
    left: 50%;
    // 元の位置を本来の位置から20px下に配置しactiveが付与されたタイミングで上がる
    transform: translate(-50%, calc(-50% + 20px));
    // ここまでが中央揃え
    color: $cWhite;
    font-size: 25px;
    // 文字には青みがからないように
    z-index: 2;

    opacity:0;
    transition: opacity 0.3s ease 1s, transform 0.3s ease 1s;  
  }

  &__footer {
    position: absolute;
    left: 50%;
    bottom: 20px;
    transform: translateX(-50%);
    z-index: 2;
    height: 68px;
    width: 22px;
    // 矢印が伸びたように見える
    overflow: hidden;
  }

  &__downarrow {
    position: absolute;
    left:0;
    bottom:0;
    width:6px;
    @include animation(
      $name: kf-arrow-anime,
      $iteration-count: infinite,
      $duration: 2s,
      $timing-function: linear
    )
  }

  &__scrolltext {
    position: absolute;
    transform: rotate(90deg);
    left: -8px;
    top: 11px;
    font-size: 1.2em;
    color: rgba(255, 255, 255, 0.7);
  }

}

@keyframes kf-arrow-anime {
  0%, 50%, 100%{
    transform: translateY(-10%);
  }
  30%{
    transform: none;
  }
}